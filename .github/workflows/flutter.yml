name: Flutter CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'

      # Create a fresh Flutter Android project in CI
      - name: Create Flutter project
        run: flutter create -t app app

      # Copy your source into the generated project
      - name: Copy source files
        run: |
          rm -rf app/lib/*
          cp -r lib/* app/lib/
          cp pubspec.yaml app/

      # Ensure Android compiles/targets API 35
      - name: Set Android SDK to 35
        run: |
          grep -q '^flutter.compileSdkVersion=' app/android/gradle.properties || echo 'flutter.compileSdkVersion=35' >> app/android/gradle.properties
          grep -q '^flutter.targetSdkVersion='  app/android/gradle.properties || echo 'flutter.targetSdkVersion=35'  >> app/android/gradle.properties
          sed -i 's/^flutter.compileSdkVersion=.*/flutter.compileSdkVersion=35/' app/android/gradle.properties
          sed -i 's/^flutter.targetSdkVersion=.*/flutter.targetSdkVersion=35/'  app/android/gradle.properties

      # Add ML Kit keep rules so we can enable shrinking later if we want
      - name: Add ProGuard keep rules for ML Kit (safe to keep even if shrinker is off)
        run: |
          cat > app/android/app/proguard-rules.pro <<'EOF'
# Keep ML Kit & related classes
-keep class com.google.mlkit.** { *; }
-keep class com.google.android.gms.internal.mlkit_** { *; }
-keep class com.google.android.gms.vision.** { *; }
-keep class com.google.firebase.components.** { *; }
-dontwarn com.google.mlkit.**
-dontwarn com.google.android.gms.internal.mlkit_**
EOF

      # HARD-PATCH Gradle to disable R8/shrinking in Release
      - name: Disable R8 in Gradle (kts or groovy)
        run: |
          APP_KTS="app/android/app/build.gradle.kts"
          APP_GROOVY="app/android/app/build.gradle"

          if [ -f "$APP_KTS" ]; then
            # Remove any existing release block to avoid conflicts (best-effort)
            sed -i '/buildTypes\s*{/,/}/d' "$APP_KTS" || true
            # Append a fresh android block with release flags off and our proguard file referenced (harmless when minify=false)
            cat >> "$APP_KTS" <<'EOF'

android {
  buildTypes {
    release {
      isMinifyEnabled = false
      isShrinkResources = false
      proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
    }
  }
}
EOF
          elif [ -f "$APP_GROOVY" ]; then
            # Remove any existing release block to avoid conflicts (best-effort)
            sed -i '/buildTypes\s*{/,/}/d' "$APP_GROOVY" || true
            # Append a fresh android block
            cat >> "$APP_GROOVY" <<'EOF'

android {
  buildTypes {
    release {
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}
EOF
          else
            echo "No app/build.gradle(.kts) found; something is off" && exit 1
          fi

      - name: Install dependencies
        run: |
          cd app
          flutter pub get

      - name: Build release APK
        run: |
          cd app
          # Flags are belt-and-braces; Gradle patch above is the real fix
          flutter build apk --release --no-shrink --no-tree-shake-icons

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/app/outputs/flutter-apk/app-release.apk